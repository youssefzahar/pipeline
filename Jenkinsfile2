pipeline {
    agent any
    environment {
        registry = "youssefzz/devposfront"
        registryCredential = '64ca017e-ac96-4507-9616-f9dfc2a84c4f'
        dockerImage = ''

    }
     tools {
            nodejs 'nodejs21.2.0'
        }
    
    stages {
        stage('Front Build') {
            steps {
                            git branch: 'front', url: 'https://github.com/youssefzahar/pipeline.git'
                            script {
                                sh 'npm install'
                                sh 'npm run build'
                            }
                }
        }

        stage('Building image') {
            steps {
                script {
                    dockerImage = docker.build registry + ":$BUILD_NUMBER"
                }
            }
        }
        stage('Deploy image') {
            steps {
                script {
                    docker.withRegistry('', registryCredential) {
                        dockerImage.push()
                    }
                }
            }
        }
        stage('Docker Compose Up') {
            steps {
                script {
                    sh "docker compose up -d"
                }
            }
        }

        stage('Mail') {
            steps {
                script {
                    def emailBody = ""
                    
                    // Append details from each stage
                    emailBody += "Build Status: ${currentBuild.result ?: 'SUCCESS'}\n\n"

                    // GIT Pull
                    emailBody += "Stage: GIT Pull\n"
                    emailBody += " - Pulling from Git...\n\n"

                    // Build Docker Image
                    emailBody += "Stage: Build Docker Image\n"
                    emailBody += " - Building Docker image for the application...\n\n"

                    // Push Docker Image
                    emailBody += "Stage: Push Docker Image\n"
                    emailBody += " - Pushing Docker image to Docker Hub...\n\n"

                    // Email Notification
                    if (currentBuild.result == 'FAILURE') {
                        emailBody += "Final Report: The pipeline has failed. Please check the logs and reports for more details.\n"
                    } else {
                        emailBody += "Final Report: The pipeline has completed successfully. No action required.\n"
                    }

                    mail(
                        body: emailBody,
                        subject: currentBuild.result == 'FAILURE' ? "❌ Échec de la pipeline DevOps Project Front End"  : "✅ Succès de la pipeline DevOps Project Front End"   , 
                        to: "mezen.bayounes@esprit.tn"
                    )
                }
            }
        }
    }

    post {
        success {
            echo 'Secondary pipeline succeeded'
            // You can add further actions if the secondary pipeline succeeds
        }
        failure {
            echo 'Secondary pipeline failed'
            // You can add further actions if the secondary pipeline fails
        }
    }
}
